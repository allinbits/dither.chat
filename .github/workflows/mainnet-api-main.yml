name: mainnet-api-main

on:
  push:
    tags:
      - 'v*'

jobs:
  detect-changes:
    runs-on: ubuntu-latest
    outputs:
      changed: ${{ steps.changes.outputs.api-main }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Detect api-main changes
        uses: dorny/paths-filter@v3
        id: changes
        with:
          filters: |
            api-main:
              - 'packages/api-main/**'

  test:
    needs: detect-changes
    if: needs.detect-changes.outputs.changed == 'true'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install pnpm with npm
        run: npm install -g pnpm

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: .nvmrc
          cache: "pnpm"

      - name: Install dependencies with pnpm
        run: pnpm install

      - name: Set up Docker
        uses: docker/setup-docker-action@v4

      - name: Build API Types
        run: |
          cd ./packages/lib-api-types
          pnpm build

      - name: Run Docker Compose Up
        run: |
          cd ./packages/api-main
          docker compose -f ./docker-compose-github.yml up --build -d --wait --wait-timeout 30

      - name: Push database migrations
        run: |
          cd ./packages/api-main
          cp .env.example .env
          pnpm db:push:force

      - name: Run tests with pnpm
        run: |
          cd ./packages/api-main
          pnpm test

  deploy-testnet:
    needs: [detect-changes, test]
    if: github.event_name == 'push' && github.ref == 'refs/heads/main' && needs.detect-changes.outputs.changed == 'true'
    runs-on: ubuntu-latest
    environment: testnet
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Fly.io CLI
        uses: superfly/flyctl-actions/setup-flyctl@master

      - name: Deploy api-main to Fly.io
        run: |
          cd ./packages/api-main
          flyctl deploy --remote-only --config ./fly.mainnet.toml
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN_API_MAIN }}
